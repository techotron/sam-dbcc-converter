AWSTemplateFormatVersion: '2010-09-09'
Description: Serverless Application Model - DBCC Application
Globals:
  Function:
    Environment:
      Variables:
        APP_NAME:
          Ref: AppName
        APP_VERSION:
          Ref: AppVersion
        DDB_TABLE:
          Fn::Sub: ${AppName}-${Environment}
        S3_BUCKET_NAME:
          Fn::ImportValue: dbcConverterBucket
        SQS_CONVERTER_QUEUE:
          Fn::ImportValue: dbcConverterQueue
    Runtime: python3.7
    Timeout: 30
Outputs:
  ApplicationApi:
    Description: API Gateway endpoint URL for the application
    Value:
      Fn::Sub: https://${ApplicationApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/
  dbccDynamoDbStreamArn:
    Description: DynamoDB Stream ARN
    Export:
      Name: dbccDynamoDb-streamarn
    Value:
      Fn::GetAtt:
      - dbccDynamoDb
      - StreamArn
  dbccDynamoDbTable:
    Description: DynamoDB Table Name
    Export:
      Name: dbccDynamoDb
    Value:
      Ref: dbccDynamoDb
Parameters:
  AppName:
    Default: sam-dbcc-converter
    Description: Name of the application
    Type: String
  AppVersion:
    Default: v1
    Description: Version of the application
    Type: String
  Environment:
    Default: dev
    Description: Name of the environment to deploy to
    Type: String
Resources:
  AppConverterFunction:
    Properties:
      AutoPublishAlias: live
      CodeUri: s3://snowco-sam-eu-west-1/60f66630804751851192bce9a5546b6d
      DeploymentPreference:
        Type: AllAtOnce
      Events:
        SqsEvent:
          Properties:
            BatchSize: 1
            Queue:
              Fn::ImportValue: dbcConverterQueue-ARN
          Type: SQS
      Handler: app.main
      Policies:
      - Statement:
        - Action:
          - dynamodb:*
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - dbccDynamoDb
            - Arn
        - Action:
          - s3:*
          Effect: Allow
          Resource: '*'
        Version: '2012-10-17'
    Type: AWS::Serverless::Function
  AppProcessorFunction:
    Properties:
      AutoPublishAlias: live
      CodeUri: s3://snowco-sam-eu-west-1/5f629e1b968c6813d8845294447ff0de
      DeploymentPreference:
        Type: AllAtOnce
      Events:
        SqsEvent:
          Properties:
            BatchSize: 1
            Queue:
              Fn::ImportValue: dbcConverterS3Queue-ARN
          Type: SQS
      Handler: app.main
      Policies:
      - Statement:
        - Action:
          - dynamodb:*
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - dbccDynamoDb
            - Arn
        Version: '2012-10-17'
    Type: AWS::Serverless::Function
  AppVersionFunction:
    Properties:
      AutoPublishAlias: live
      CodeUri: s3://snowco-sam-eu-west-1/d3a21961de4e43832bec147b88836448
      DeploymentPreference:
        Hooks:
          PostTraffic:
            Ref: AppVersionPostTrafficHookFunction
          PreTraffic:
            Ref: AppVersionPreTrafficHookFunction
        Type: AllAtOnce
      Events:
        Version:
          Properties:
            Method: get
            Path: /version
            RestApiId:
              Ref: ApplicationApi
          Type: Api
      Handler: app.get_version
    Type: AWS::Serverless::Function
  AppVersionPostTrafficHookFunction:
    Properties:
      CodeUri: s3://snowco-sam-eu-west-1/ccef74e60cc2ade2518992e6b79c28a8
      DeploymentPreference:
        Enabled: false
      FunctionName: CodeDeployHook_postTrafficHook
      Handler: test_handler.test_version_post_traffic
      Policies:
      - Statement:
        - Action:
          - codedeploy:PutLifecycleEventHookExecutionStatus
          Effect: Allow
          Resource: '*'
        Version: '2012-10-17'
      - Statement:
        - Action:
          - lambda:InvokeFunction
          Effect: Allow
          Resource:
            Ref: AppVersionFunction.Version
        Version: '2012-10-17'
    Type: AWS::Serverless::Function
  AppVersionPreTrafficHookFunction:
    Properties:
      CodeUri: s3://snowco-sam-eu-west-1/d3a21961de4e43832bec147b88836448
      DeploymentPreference:
        Enabled: false
      Environment:
        Variables:
          CurrentFunctionVersion:
            Ref: AppVersionFunction.Version
      FunctionName: CodeDeployHook_preTrafficHook
      Handler: test_handler.test_version_pre_traffic
      Policies:
      - Statement:
        - Action:
          - codedeploy:PutLifecycleEventHookExecutionStatus
          Effect: Allow
          Resource: '*'
        Version: '2012-10-17'
      - Statement:
        - Action:
          - lambda:InvokeFunction
          Effect: Allow
          Resource:
            Ref: AppVersionFunction.Version
        Version: '2012-10-17'
    Type: AWS::Serverless::Function
  ApplicationApi:
    Properties:
      Name: ApplicationApi
      StageName:
        Ref: Environment
    Type: AWS::Serverless::Api
  StreamProcessorFunction:
    Properties:
      AutoPublishAlias: live
      CodeUri: s3://snowco-sam-eu-west-1/64ab99aba10f8175cba81ff6b0b96ff0
      DeploymentPreference:
        Type: AllAtOnce
      Events:
        DdbEvent:
          Properties:
            BatchSize: 1
            Enabled: true
            StartingPosition: LATEST
            Stream:
              Fn::GetAtt:
              - dbccDynamoDb
              - StreamArn
          Type: DynamoDB
      Handler: app.main
      Policies:
      - Statement:
        - Action:
          - dynamodb:*
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - dbccDynamoDb
            - Arn
        - Action:
          - dynamodb:*
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - dbccDynamoDb
            - StreamArn
        - Action:
          - s3:*
          Effect: Allow
          Resource: '*'
        - Action:
          - sqs:*
          Effect: Allow
          Resource:
            Fn::ImportValue: dbcConverterQueue-ARN
        Version: '2012-10-17'
    Type: AWS::Serverless::Function
  dbccDynamoDb:
    Properties:
      AttributeDefinitions:
      - AttributeName: messageId
        AttributeType: S
      KeySchema:
      - AttributeName: messageId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 10
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TableName:
        Fn::Sub: ${AppName}-${Environment}
    Type: AWS::DynamoDB::Table
Transform: AWS::Serverless-2016-10-31
